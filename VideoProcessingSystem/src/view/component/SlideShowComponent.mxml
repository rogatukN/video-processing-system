<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" alpha=".85"
		 click="_timer.stop();">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			
			import appConst.Icons;
			
			import model.IFrame;
			
			import vo.DetectionViewDataVO;
			
			private var _dataProvider: ArrayCollection;
			public var delay: Number = 200;
			[Bindable]
			private var _timer: Timer;
			[Bindable]
			public var slide: IFrame;
			
			[Bindable]
			public var angle : Number;

			public function set dataProvider(value:ArrayCollection):void
			{
				if (!value){
					return;
				}
				_dataProvider = value;
				if (_timer){
					_timer.stop();
				}
				_timer = new Timer(delay);
				_timer.addEventListener(TimerEvent.TIMER,show);
				_timer.start();
			}
			
			private function show(event: TimerEvent):void
			{
				var index: int = Math.abs(Timer(event.currentTarget).currentCount%_dataProvider.length);
				slide = _dataProvider.getItemAt(index) as IFrame;
				var x: Number = (slide as DetectionViewDataVO).findx;
				var y: Number = (slide as DetectionViewDataVO).findy;
				angle = Math.atan2(140-y,x-160)*180/Math.PI;
				if (angle<0){
					angle=360+angle;
				}
			}
		]]>
	</fx:Script>
	<fx:Metadata>
		[Event(name="close", type="flash.events.Event")]
	</fx:Metadata>
	<s:Rect top="0" bottom="0" right="0" left="0"
			radiusX="5" radiusY="5">
		<s:fill>
			<s:SolidColor color="#FFCC00"/>
		</s:fill>
	</s:Rect>
	<s:BitmapImage source="{slide.bitMap}" top="3" bottom="3" right="3" left="3"/>
	<s:Image source="{Icons.CLOSE_BUTTON}" top="0" right="0" click="dispatchEvent(new Event('close'));"
			 visible="{slide}" includeInLayout="{slide}"/>
	<s:Group width="75" height="20" left="5" top="5">
		<s:Rect width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="#ffffff"/>
			</s:fill>
		</s:Rect>
		<s:Label text="k = {angle.toFixed(2)}" horizontalCenter="0" verticalCenter="0"/>
	</s:Group>
</s:Group>
